name: CI/CD Pipeline

on:
  workflow_dispatch

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r test/requirements.txt

      - name: Run tests with coverage
        run: |
          pytest test -v --cov=src --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 7

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/juans-python-sandbox:latest .

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/juans-python-sandbox:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name juans-python-sandbox-eks --region ${{ vars.AWS_REGION }}

      - name: Verify kubectl connection
        run: |
          kubectl cluster-info

      - name: Populate secrets
        run: |
          export POSTGRES_DB="${{ secrets.POSTGRES_DB }}"
          export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
          export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
          envsubst < kubernetes/postgres-db/postgres-db-secrets.template.yml > kubernetes/postgres-db/postgres-db-secrets.yml
          envsubst < kubernetes/api/python-sandbox-secrets.template.yml > kubernetes/api/python-sandbox-secrets.yml

      - name: Deploy to EKS
        run: |
          kubectl apply --recursive -f kubernetes/
